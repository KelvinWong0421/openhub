import Head from 'next/head'
import Image from 'next/image'
import Sidebar from './components/Sidebar'
import Feed from './components/Feed'
import Modal from './components/Modal'
import { GetServerSidePropsContext } from 'next/types'
import {   ClientSafeProvider, getProviders,getSession,LiteralUnion,useSession } from 'next-auth/react'
import Auth from './Auth'
import { BuiltInProviderType } from 'next-auth/providers'
import { modalState } from '@/atoms/modalAtom'
import { useRecoilState } from 'recoil'
import Search from './components/Search'


type Props = {
    providers:Record<LiteralUnion<BuiltInProviderType, string>, ClientSafeProvider>
}


export default function Home({providers}: Props) {

  const {data: session} = useSession();
  const [isOpen,setIsOpen] = useRecoilState(modalState);

  
  if(!session) return <Auth providers={providers}/>

  return (
    <>
      <Head>
        <title>OpenHub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico "  />
      </Head>
      
      <main className='bg-black min-h-screen flex max-w-[1500px] mx-auto'>
        {/*Sidebar*/}
        <Sidebar />

        {/*Feed*/}
        <Feed/>

        {/*Modal*/}
        {isOpen&&<Modal/>}

        {/* Search */}
        <Search/>

      </main>
      
      
    </>
  )
}

export async function getServerSideProps(context:GetServerSidePropsContext) {

  
  const providers = await getProviders();
  const session = await getSession(context)
  
  return {
    props: {
      providers,
      session
    }, 
  }
}